/*
 *      Copyright 2015-2016 GetSocial B.V.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

  var User = function(serializedUser) {
    this._guid = "";
    this._displayName = "";
    this._avatarUrl = "";
    this._providerIds = {};

    this.deserialize(serializedUser)
  }

  User.prototype.deserialize = function(object) {
    this._guid = object.guid;
    this._displayName = object.display_name;
    this._avatarUrl = object.avatar;

    this._providerIds = {};
    var providerData = object.identities;
    if(providerData != null) {
        var keys = Object.keys(providerData);
        for(var i=0; i < keys.length; i++) {
            var key = keys[i];
            this._providerIds[key] = providerData[key];
        }
    }
  }

  User.prototype.guid = function() {
    return this._guid;
  }

  User.prototype.displayName = function() {
    return this._displayName;
  }
  User.prototype.avatarUrl = function() {
    return this._avatarUrl;
  }

  User.prototype.isAnonymous = function() {
    if(Object.keys(this._providerIds).length == 0) {
        return true;
    }

    return false;
  }

   User.prototype.getIdentities = function() {
       var keys = Object.keys(this._providerIds);
       return keys;
   }

   User.prototype.hasIdentityForProvider = function(provider) {
        return providerIds.hasOwnProperty(provider);
   }

   User.prototype.getUserIdForProvider = function(provider) {
        return hasIdentityForProvider(provider) ? providerIds[provider] : null;
   }

    module.exports = User;
