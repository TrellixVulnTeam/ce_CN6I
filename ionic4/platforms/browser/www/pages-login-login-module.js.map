{"version":3,"sources":["webpack:///./src/app/pages/login/login.module.ts","webpack:///./src/app/pages/login/login.page.html","webpack:///./src/app/pages/login/login.page.scss","webpack:///./src/app/pages/login/login.page.ts"],"names":[],"mappings":"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","file":"pages-login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Login</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <img src=\\\"assets/imgs/LoginIcon.png\\\">\\n  <!-- <ion-button>\\n      <ion-label>Owner</ion-label>\\n  </ion-button> -->\\n  <!-- <ion-item button>\\n      <ion-label>Owner</ion-label>\\n  </ion-item>\\n  <br>\\n  <ion-button>\\n      <ion-label>Operator</ion-label>\\n  </ion-button> -->\\n<!-- <ion-list ngDefaultControl [(ngModel)]=\\\"Role\\\" > -->\\n<ion-list>\\n    <ion-radio-group ngDefaultControl [(ngModel)]=\\\"Role\\\" (ionChange)=\\\"showRole()\\\">\\n        <ion-item>\\n            <ion-label>Owner</ion-label>\\n            <ion-radio value =\\\"Owner\\\" checked></ion-radio>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Operator</ion-label>\\n          <ion-radio value =\\\"Operator\\\" ></ion-radio>\\n        </ion-item>\\n    </ion-radio-group>\\n</ion-list>\\n  \\n  <br>\\n  <!-- <ion-radio-group [(ngModel)]=\\\"Role\\\" (ionChange)=\\\"role($event)\\\">\\n    <ion-item>\\n      <ion-label>Owner name</ion-label>\\n      <ion-radio value =\\\"Owner\\\" (ionSelect)=\\\"Owner\\\"></ion-radio>\\n    </ion-item>\\n    <ion-item>\\n        <ion-label>Operator</ion-label>\\n        <ion-radio value =\\\"Operator\\\" (ionSelect)=\\\"Operator\\\"></ion-radio>\\n      </ion-item>\\n  </ion-radio-group> -->\\n\\n  \\n  <!-- <br /> -->\\n  <!-- <ion-list radio-group [(ngModel)]=\\\"Role\\\" (ionChange)=\\\"role($event)\\\"> -->\\n    <!-- <ion-item> -->\\n      <!-- <ion-label>{{ owner }}</ion-label> -->\\n      <!-- <ion-label>Owner</ion-label> -->\\n      <!-- <ion-radio value=\\\"Owner\\\" (ionSelect)=\\\"Owner\\\"></ion-radio> -->\\n    <!-- </ion-item> -->\\n    <!-- <ion-item> -->\\n      <!-- <ion-label>{{ operator }}</ion-label> -->\\n      <!-- <ion-label>Operator</ion-label> -->\\n      <!-- <ion-radio value=\\\"Operator\\\" (ionSelect)=\\\"Operator\\\"></ion-radio> -->\\n    <!-- </ion-item> -->\\n  <!-- </ion-list> -->\\n\\n  <!-- <button ion-button block outline (click)=\\\"loginWithFacebook1()\\\" *ngIf=\\\"!provider.loggedin\\\"> -->\\n  <!-- <ion-button expand=\\\"block\\\" (click)=\\\"loginWithFacebook1()\\\"> -->\\n  <ion-button expand=\\\"block\\\" (click)=\\\"testLogin()\\\">\\n    <ion-icon name=\\\"logo-facebook\\\"></ion-icon>\\n    Login With Facebook\\n  </ion-button>\\n  <!-- <button ion-button block outline (click)=\\\"loginWithFacebook1()\\\">\\n    \\n  </button> -->\\n\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { AlertController, LoadingController, Events } from '@ionic/angular';\nimport { AppService } from 'src/app/services/app.service';\nimport { Facebook } from '@ionic-native/facebook/ngx';\nimport { Storage } from '@ionic/storage';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  // Role;\n  public language: string;\n  public title: string;\n  public owner: string;\n  public operator: string;\n  public rolemsgtitle: string;\n  public rolemsg: string;\n\n  @ViewChild('email') email;\n  @ViewChild('password') password;\n\n  Role: string;\n  loading: any;\n  access_token: string;\n  isLoggedIn = false;\n  roleValue: boolean;\n\n  provider = {\n    loggedin: false,\n    name: '',\n    email: '',\n    profilePicture: ''\n  };\n\n  constructor(public router: Router, public storage: Storage, public alertCtrl: AlertController,\n    private fb: Facebook, public loadingCtrl: LoadingController, \n    public appprov: AppService, public event: Events) { }\n\n  ngOnInit() {\n  }\n\n  showRole(){\n    console.log(\"role is: \"+this.Role);\n  }\n\n  // role(value) {\n  //   this.Role = value;\n  //   console.log(\"role is: \" + \"\"+value);\n  //   console.log(\"role is: \" + \"\"+this.Role);\n  //   console.log(\"role is: \" + String(value));\n  // }\n\n  testLogin(){\n    console.log(\"clicked\");\n    console.log(\"show me\"+this.Role);\n    if(this.Role == 'Owner') {\n      this.router.navigateByUrl('owner/tabs/owner-home');\n      console.log(\"clicked\");\n    }\n    else {\n      console.log(\"show me\"+this.Role);\n      this.router.navigateByUrl('operator/tabs/operator-home');\n      // this.navCtrl.navigateRoot('/LoginPage');\n    }\n  }\n\n  showLoader() {\n    this.loading = this.loadingCtrl.create({\n      message: 'Loading...'\n    });\n    this.loading.present();\n  }\n\n  async showAlert(message: string) {\n    const alert = await this.alertCtrl.create({\n      header: 'Info',\n      subHeader: message,\n      buttons: ['OK']\n    });\n    await alert.present();\n  }\n\n  async roleAlert() {\n    const alert = await this.alertCtrl.create({\n      header: this.rolemsgtitle,\n      subHeader: this.rolemsg,\n      buttons: ['OK']\n    });\n    // }).then(alert => alert.present());\n    await alert.present();\n  }\n\n  loginWithFacebook1() {\n\n    if (this.Role == null || this.Role === undefined) {\n      // const alert = this.alertCtrl.create({\n      //   header: this.rolemsgtitle,\n      //   subHeader: this.rolemsg,\n      //   buttons: ['OK']\n      // }).then(alert => alert.present());\n      // alert.present();\n      this.roleAlert();\n      return;\n    }// if role\n\n    this.showLoader();\n\n    this.fb.login(['public_profile', 'user_friends', 'email']).then(res => {\n\n      this.loading.dismiss();\n      if (res.status === 'connected') {\n        // this.showAlert(res.authResponse.userID + \": \" + res.authResponse.accessToken);\n\n        this.access_token = res.authResponse.accessToken;\n        const userID = res.authResponse.userID;\n\n        this.fb.api('/me?fields=id,name,email,picture,first_name,last_name,gender,location,locale,work,languages,birthday,relationship_status,hometown', []).then(\n          profile => {\n            const email = profile.email;\n            // Get profile picture from url\n            // let profile_url = profile['picture']['data']['url'];\n            // Set profile_url as empty default\n            const profile_url = 'assets/imgs/blank_profile.png';\n            const name = profile.name;\n\n            if (email != null && email !== '') {\n              this.loading.dismiss();\n              console.log('User is logged in either by new access_token or revisit user');\n              this.appprov.checkExistingUser(email).then((res) => {\n                let checkUser = JSON.stringify(res);\n                checkUser = JSON.parse(checkUser);\n                checkUser = checkUser['result'].toString();\n                console.log(checkUser);\n\n                if (checkUser === 'false') {\n                  this.appprov.updateAccessToken(email, this.access_token, profile_url).then((res) => {\n                    let update = JSON.stringify(res);\n                    update = JSON.parse(update);\n                    console.log(update);\n                    this.storage.set('access_token', this.access_token);\n                    let navigationExtras: NavigationExtras = {\n                      queryParams: {\n                          token: this.access_token,\n                      }\n                    };\n                    if (this.Role == 'Owner') {\n                      this.roleValue = true;\n                      // this.event.publish('roleReceived', this.roleValue);\n                      // this.nav.setRoot(TabsPage);\n                      this.router.navigateByUrl('owner/tabs/owner-home', navigationExtras);\n                      console.log(\"clicked\" + \"storage: \" + this.storage);\n                      return;\n                    } else {\n                      this.roleValue = false;\n                      // this.event.publish('roleReceived', this.roleValue);\n                      // this.nav.setRoot(OperatorstabsPage, this.storage);\n                      console.log(\"show me \"+this.Role + \" storage: \" + this.storage);\n                      this.router.navigateByUrl('operator/tabs/operator-home',navigationExtras);\n                      return;\n                    }\n                  }, err => { console.log(err); });\n                } else {\n                  this.loading.dismiss();\n                  this.appprov.addUser(email, this.access_token, name, profile_url, this.Role).then((res) => {\n                    let adduser = JSON.stringify(res);\n                    adduser = JSON.parse(adduser);\n                    // console.log(adduser['result']);\n                  }, err => { console.log(err); });\n                }\n              }, err => {\n                console.log(err);\n              });\n\n              this.storage.set('access_token', this.access_token);\n              this.isLoggedIn = true;\n\n              if (this.Role === 'Owner') {\n                this.router.navigateByUrl('CreatecompanyPage');\n                // this.navCtrl.navigateForward('/CreatecompanyPage', this.storage);\n                // this.nav.push(CreatecompanyPage, this.storage);\n              } else {\n                this.router.navigateByUrl('OtpOperatorPage');\n                // this.nav.push(OtpOperatorPage, this.storage);\n              }\n              return;\n            }\n          }\n        );\n      } else {\n        this.isLoggedIn = false;\n        this.showAlert(res.status);\n      }\n    }).catch(e => {\n      console.log('Error logging into Facebook', e);\n      console.log('Display value for isLoggedIn', this.isLoggedIn);\n    });\n    this.fb.logEvent(this.fb.EVENTS.EVENT_NAME_ADDED_TO_CART);\n    this.loading.dismiss();\n  }\n\n\n\n\n}\n"],"sourceRoot":""}